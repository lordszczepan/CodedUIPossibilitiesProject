// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 16.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUIPossibilitiesPageObjects.UIMap1Classes
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIArtykułCustom : HtmlCustom
    {
        
        public UIArtykułCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties["TagName"] = "LI";
            this.SearchProperties["Id"] = "ca-nstab-main";
            this.SearchProperties[UITestControl.PropertyNames.Name] = null;
            this.FilterProperties["Class"] = "selected mw-list-item";
            this.FilterProperties["ControlDefinition"] = "class=\"selected mw-list-item\" id=\"ca-nst";
            this.FilterProperties["InnerText"] = "Artykuł";
            this.FilterProperties["TagInstance"] = "23";
            this.WindowTitles.Add("Testowanie eksploracyjne – Wikipedia, wolna encyklopedia - Internet Explorer");
            #endregion
        }
        
        #region Properties
        public HtmlHyperlink UIArtykułHyperlink
        {
            get
            {
                if ((this.mUIArtykułHyperlink == null))
                {
                    this.mUIArtykułHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIArtykułHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIArtykułHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIArtykułHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIArtykułHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Artykuł";
                    this.mUIArtykułHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/wiki/Testowanie_eksploracyjne";
                    this.mUIArtykułHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = "Zobacz stronę treści [alt-c]";
                    this.mUIArtykułHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "https://pl.wikipedia.org/wiki/Testowanie_eksploracyjne";
                    this.mUIArtykułHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIArtykułHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "title=\"Zobacz stronę treści [alt-c]\" acc";
                    this.mUIArtykułHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "1";
                    this.mUIArtykułHyperlink.WindowTitles.Add("Testowanie eksploracyjne – Wikipedia, wolna encyklopedia - Internet Explorer");
                    #endregion
                }
                return this.mUIArtykułHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlHyperlink mUIArtykułHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIGoogleOsobistyMicrosWindow : WinWindow
    {
        
        public UIGoogleOsobistyMicrosWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Google — Osobisty — Microsoft​ Edge";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Google — Osobisty — Microsoft​ Edge");
            this.WindowTitles.Add("Star Wars - Szukaj w Google — Osobisty — Microsoft​ Edge");
            #endregion
        }
        
        #region Properties
        public UIItemGroup UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup(this);
                }
                return this.mUIItemGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGroup mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIItemGroup : WinGroup
    {
        
        public UIItemGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Google — Osobisty — Microsoft​ Edge");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIGoogleOsobistyMicrosComboBox
        {
            get
            {
                if ((this.mUIGoogleOsobistyMicrosComboBox == null))
                {
                    this.mUIGoogleOsobistyMicrosComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIGoogleOsobistyMicrosComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Szukaj";
                    this.mUIGoogleOsobistyMicrosComboBox.WindowTitles.Add("Google — Osobisty — Microsoft​ Edge");
                    #endregion
                }
                return this.mUIGoogleOsobistyMicrosComboBox;
            }
        }
        
        public WinComboBox UISzukajComboBox
        {
            get
            {
                if ((this.mUISzukajComboBox == null))
                {
                    this.mUISzukajComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUISzukajComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Szukaj";
                    this.mUISzukajComboBox.WindowTitles.Add("Google — Osobisty — Microsoft​ Edge");
                    #endregion
                }
                return this.mUISzukajComboBox;
            }
        }
        
        public WinButton UIGoogleOsobistyMicrosButton
        {
            get
            {
                if ((this.mUIGoogleOsobistyMicrosButton == null))
                {
                    this.mUIGoogleOsobistyMicrosButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGoogleOsobistyMicrosButton.SearchProperties[WinButton.PropertyNames.Name] = "Szukaj w Google";
                    this.mUIGoogleOsobistyMicrosButton.WindowTitles.Add("Google — Osobisty — Microsoft​ Edge");
                    #endregion
                }
                return this.mUIGoogleOsobistyMicrosButton;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIGoogleOsobistyMicrosComboBox;
        
        private WinComboBox mUISzukajComboBox;
        
        private WinButton mUIGoogleOsobistyMicrosButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIGoogleGoogleChromeWindow : WinWindow
    {
        
        public UIGoogleGoogleChromeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Google - Google Chrome";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Google - Google Chrome");
            this.WindowTitles.Add("Star Wars - Szukaj w Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public UIItemGroup1 UIItemGroup
        {
            get
            {
                if ((this.mUIItemGroup == null))
                {
                    this.mUIItemGroup = new UIItemGroup1(this);
                }
                return this.mUIItemGroup;
            }
        }
        
        public UIGwiezdnewojnyWikipedGroup1 UIGwiezdnewojnyWikipedGroup
        {
            get
            {
                if ((this.mUIGwiezdnewojnyWikipedGroup == null))
                {
                    this.mUIGwiezdnewojnyWikipedGroup = new UIGwiezdnewojnyWikipedGroup1(this);
                }
                return this.mUIGwiezdnewojnyWikipedGroup;
            }
        }
        
        public UIZaakceptujwszystkoButton UIZaakceptujwszystkoButton
        {
            get
            {
                if ((this.mUIZaakceptujwszystkoButton == null))
                {
                    this.mUIZaakceptujwszystkoButton = new UIZaakceptujwszystkoButton(this);
                }
                return this.mUIZaakceptujwszystkoButton;
            }
        }
        
        public UIChromeLegacyWindowWindow UIChromeLegacyWindowWindow
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow == null))
                {
                    this.mUIChromeLegacyWindowWindow = new UIChromeLegacyWindowWindow(this);
                }
                return this.mUIChromeLegacyWindowWindow;
            }
        }
        
        public UIZgadzamsięButton UIZgadzamsięButton
        {
            get
            {
                if ((this.mUIZgadzamsięButton == null))
                {
                    this.mUIZgadzamsięButton = new UIZgadzamsięButton(this);
                }
                return this.mUIZgadzamsięButton;
            }
        }
        
        public UIGmailHyperlink UIGmailHyperlink
        {
            get
            {
                if ((this.mUIGmailHyperlink == null))
                {
                    this.mUIGmailHyperlink = new UIGmailHyperlink(this);
                }
                return this.mUIGmailHyperlink;
            }
        }
        
        public UIChromeLegacyWindowWindow1 UIChromeLegacyWindowWindow1
        {
            get
            {
                if ((this.mUIChromeLegacyWindowWindow1 == null))
                {
                    this.mUIChromeLegacyWindowWindow1 = new UIChromeLegacyWindowWindow1(this);
                }
                return this.mUIChromeLegacyWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIItemGroup1 mUIItemGroup;
        
        private UIGwiezdnewojnyWikipedGroup1 mUIGwiezdnewojnyWikipedGroup;
        
        private UIZaakceptujwszystkoButton mUIZaakceptujwszystkoButton;
        
        private UIChromeLegacyWindowWindow mUIChromeLegacyWindowWindow;
        
        private UIZgadzamsięButton mUIZgadzamsięButton;
        
        private UIGmailHyperlink mUIGmailHyperlink;
        
        private UIChromeLegacyWindowWindow1 mUIChromeLegacyWindowWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIItemGroup1 : WinGroup
    {
        
        public UIItemGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinComboBox UIGoogleGoogleChromeComboBox
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeComboBox == null))
                {
                    this.mUIGoogleGoogleChromeComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Szukaj";
                    this.mUIGoogleGoogleChromeComboBox.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeComboBox;
            }
        }
        
        public WinComboBox UISzukajComboBox
        {
            get
            {
                if ((this.mUISzukajComboBox == null))
                {
                    this.mUISzukajComboBox = new WinComboBox(this);
                    #region Search Criteria
                    this.mUISzukajComboBox.SearchProperties[WinComboBox.PropertyNames.Name] = "Szukaj";
                    this.mUISzukajComboBox.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUISzukajComboBox;
            }
        }
        
        public WinGroup UIGoogleGoogleChromeGroup
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeGroup == null))
                {
                    this.mUIGoogleGoogleChromeGroup = new WinGroup(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeGroup.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIGoogleGoogleChromeGroup.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeGroup;
            }
        }
        #endregion
        
        #region Fields
        private WinComboBox mUIGoogleGoogleChromeComboBox;
        
        private WinComboBox mUISzukajComboBox;
        
        private WinGroup mUIGoogleGoogleChromeGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIGwiezdnewojnyWikipedGroup1 : WinGroup
    {
        
        public UIGwiezdnewojnyWikipedGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Gwiezdne wojny – Wikipedia, wolna encyklopedia";
            this.WindowTitles.Add("Star Wars - Szukaj w Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIStarWarsSzukajwGooglText
        {
            get
            {
                if ((this.mUIStarWarsSzukajwGooglText == null))
                {
                    this.mUIStarWarsSzukajwGooglText = new WinText(this);
                    #region Search Criteria
                    this.mUIStarWarsSzukajwGooglText.SearchProperties[WinText.PropertyNames.Name] = "Gwiezdne wojny – Wikipedia, wolna encyklopedia";
                    this.mUIStarWarsSzukajwGooglText.WindowTitles.Add("Star Wars - Szukaj w Google - Google Chrome");
                    #endregion
                }
                return this.mUIStarWarsSzukajwGooglText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIStarWarsSzukajwGooglText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIZaakceptujwszystkoButton : WinButton
    {
        
        public UIZaakceptujwszystkoButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Zaakceptuj wszystko";
            this.WindowTitles.Add("Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIGoogleGoogleChromeText
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeText == null))
                {
                    this.mUIGoogleGoogleChromeText = new WinText(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeText.SearchProperties[WinText.PropertyNames.Name] = "Zaakceptuj wszystko";
                    this.mUIGoogleGoogleChromeText.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIGoogleGoogleChromeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIChromeLegacyWindowWindow : WinWindow
    {
        
        public UIChromeLegacyWindowWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "36659392";
            this.WindowTitles.Add("Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIGoogleGoogleChromeDocument
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeDocument == null))
                {
                    this.mUIGoogleGoogleChromeDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIGoogleGoogleChromeDocument.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIGoogleGoogleChromeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIZgadzamsięButton : WinButton
    {
        
        public UIZgadzamsięButton(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Zgadzam się";
            this.WindowTitles.Add("Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIGoogleGoogleChromeText
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeText == null))
                {
                    this.mUIGoogleGoogleChromeText = new WinText(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeText.SearchProperties[WinText.PropertyNames.Name] = "Zgadzam się";
                    this.mUIGoogleGoogleChromeText.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIGoogleGoogleChromeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIGmailHyperlink : WinHyperlink
    {
        
        public UIGmailHyperlink(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinHyperlink.PropertyNames.Name] = "Gmail";
            this.WindowTitles.Add("Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinText UIGoogleGoogleChromeText
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeText == null))
                {
                    this.mUIGoogleGoogleChromeText = new WinText(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeText.SearchProperties[WinText.PropertyNames.Name] = "Gmail";
                    this.mUIGoogleGoogleChromeText.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIGoogleGoogleChromeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIChromeLegacyWindowWindow1 : WinWindow
    {
        
        public UIChromeLegacyWindowWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "118346496";
            this.WindowTitles.Add("Google - Google Chrome");
            #endregion
        }
        
        #region Properties
        public WinControl UIGoogleGoogleChromeDocument
        {
            get
            {
                if ((this.mUIGoogleGoogleChromeDocument == null))
                {
                    this.mUIGoogleGoogleChromeDocument = new WinControl(this);
                    #region Search Criteria
                    this.mUIGoogleGoogleChromeDocument.SearchProperties[UITestControl.PropertyNames.Name] = "Google";
                    this.mUIGoogleGoogleChromeDocument.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
                    this.mUIGoogleGoogleChromeDocument.WindowTitles.Add("Google - Google Chrome");
                    #endregion
                }
                return this.mUIGoogleGoogleChromeDocument;
            }
        }
        #endregion
        
        #region Fields
        private WinControl mUIGoogleGoogleChromeDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIGoogleInPrivateMicroWindow : WinWindow
    {
        
        public UIGoogleInPrivateMicroWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Google — [InPrivate] — Microsoft​ Edge";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "Chrome_WidgetWin_1";
            this.WindowTitles.Add("Google — [InPrivate] — Microsoft​ Edge");
            #endregion
        }
        
        #region Properties
        public UIZaakceptujwszystkoButton1 UIZaakceptujwszystkoButton
        {
            get
            {
                if ((this.mUIZaakceptujwszystkoButton == null))
                {
                    this.mUIZaakceptujwszystkoButton = new UIZaakceptujwszystkoButton1(this);
                }
                return this.mUIZaakceptujwszystkoButton;
            }
        }
        #endregion
        
        #region Fields
        private UIZaakceptujwszystkoButton1 mUIZaakceptujwszystkoButton;
        
        private UIItemGroup2 mUIItemGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIZaakceptujwszystkoButton1 : WinButton
    {
        
        public UIZaakceptujwszystkoButton1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinButton.PropertyNames.Name] = "Zaakceptuj wszystko";
            this.WindowTitles.Add("Google — [InPrivate] — Microsoft​ Edge");
            #endregion
        }
        
        #region Properties
        public WinText UIGoogleInPrivateMicroText
        {
            get
            {
                if ((this.mUIGoogleInPrivateMicroText == null))
                {
                    this.mUIGoogleInPrivateMicroText = new WinText(this);
                    #region Search Criteria
                    this.mUIGoogleInPrivateMicroText.SearchProperties[WinText.PropertyNames.Name] = "Zaakceptuj wszystko";
                    this.mUIGoogleInPrivateMicroText.WindowTitles.Add("Google — [InPrivate] — Microsoft​ Edge");
                    #endregion
                }
                return this.mUIGoogleInPrivateMicroText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIGoogleInPrivateMicroText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "16.0.31306.167")]
    public class UIItemGroup2 : WinGroup
    {
        #region Properties
        public WinButton UIGoogleInPrivateMicroButton
        {
            get
            {
                if ((this.mUIGoogleInPrivateMicroButton == null))
                {
                    this.mUIGoogleInPrivateMicroButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIGoogleInPrivateMicroButton.SearchProperties[WinButton.PropertyNames.Name] = "Zaakceptuj wszystko";
                    #endregion
                }
                return this.mUIGoogleInPrivateMicroButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIGoogleInPrivateMicroButton;
        #endregion
    }
}
